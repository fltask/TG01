import os
from dotenv import load_dotenv
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, BotCommand
from aiogram.client.default import DefaultBotProperties
import requests
import sys




# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

if not TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

def get_weather(city):
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    response = requests.get(url)
    return response.json()

@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer("üå§Ô∏è <b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã!</b>\n\n"
                        "–Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –º–∏—Ä–∞!\n\n"
                        "üåç <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> /weather –ì–æ—Ä–æ–¥")

@dp.message(Command("weather"))
async def weather_command(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split()
    
    if len(args) > 1:
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥
        city = ' '.join(args[1:])  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–ª–æ–≤–∞ –ø–æ—Å–ª–µ /weather
        await get_weather_info(message, city)
    else:
        # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ú–æ—Å–∫–≤—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        await get_weather_info(message, "–ú–æ—Å–∫–≤–∞")

@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer("üå§Ô∏è <b>–Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã!</b>\n\n"
                        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è —É–º–µ—é —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –º–∏—Ä–∞.\n\n"
                        "üåç <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> /weather –ì–æ—Ä–æ–¥")

async def get_weather_info(message: Message, city: str):
    weather = get_weather(city)
    if weather.get('cod') == 200:
        temp = weather['main']['temp']
        description = weather['weather'][0]['description']
        humidity = weather['main']['humidity']
        wind = weather['wind']['speed']
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã
        weather_emoji = {
            '—è—Å–Ω–æ': '‚òÄÔ∏è',
            '–æ–±–ª–∞—á–Ω–æ': '‚òÅÔ∏è',
            '–ø–∞—Å–º—É—Ä–Ω–æ': '‚õÖ',
            '–¥–æ–∂–¥—å': 'üåßÔ∏è',
            '—Å–Ω–µ–≥': '‚ùÑÔ∏è',
            '—Ç—É–º–∞–Ω': 'üå´Ô∏è',
            '–≥—Ä–æ–∑–∞': '‚õàÔ∏è',
            'clear': '‚òÄÔ∏è',
            'clouds': '‚òÅÔ∏è',
            'rain': 'üåßÔ∏è',
            'snow': '‚ùÑÔ∏è',
            'mist': 'üå´Ô∏è',
            'thunderstorm': '‚õàÔ∏è'
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
        emoji = weather_emoji.get(description.lower(), 'üå§Ô∏è')
        
        await message.answer(f"üåç <b>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()}</b>\n\n"
           f"{emoji} <b>{description.capitalize()}</b>\n"
           f"üå°Ô∏è <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp}¬∞C\n"
           f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
           f"üí® <b>–í–µ—Ç–µ—Ä:</b> {wind} –º/—Å\n\n")

    elif weather.get('cod') == 404:
        await message.answer(f"‚ùå <b>–ì–æ—Ä–æ–¥ '{city.capitalize()}' –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>\n\n"
                            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞.\n\n"
                            "üåç <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> /weather –ì–æ—Ä–æ–¥")
    else:
        error_message = weather.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        await message.answer(f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {error_message}\n\n"
                            "üåç <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> /weather –ì–æ—Ä–æ–¥")

@dp.message()
async def handle_message(message: Message):
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if message.text.startswith('/'):
        return
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not message.text.strip():
        return
    
    await message.answer("üå§Ô∏è <b>–Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã!</b>\n\n"
                        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è —É–º–µ—é —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –º–∏—Ä–∞.\n\n"
                        "üåç <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> /weather –ì–æ—Ä–æ–¥")

@dp.startup()
async def on_startup(bot: Bot):
    await bot.set_my_commands([
        BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand(command="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
        BotCommand(command="weather", description="–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ"),
    ])

async def main():
    try:
        await dp.start_polling(bot, polling_timeout=30)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        await bot.close()


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        asyncio.run(bot.close())
        sys.exit()






